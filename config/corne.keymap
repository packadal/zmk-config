/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "keys_fr.h"
#include "../zmk-nodefree-config/helper.h"

/* use helper macros to define left and right hand keys */
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"                // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <175>; \
        global-quick-tap-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs


#define DEFAULT    0
#define MEDIA      1 
#define SHORT      2
#define NAV        3

#define ___ &trans

#define AS(keycode) &as LS(keycode) keycode
ZMK_BEHAVIOR(as, hold_tap,
    flavor = "tap-preferred";
    tapping-term-ms = <130>;
    quick-tap-ms = <0>;
    bindings = <&kp>, <&kp>;
    label = "AUTO_SHIFT";
)

ZMK_LAYER(default,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
            &kp TAB      AS(FR_Q)        AS(H)         AS(O)        AS(U)          AS(X)             AS(G)         AS(C)         AS(FR_M)      AS(R)         AS(FR_Z)     &kp ESC
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LSHFT      AS(Y)          AS(I)         AS(E)        AS(FR_A)    &mt FR_GRAVE FR_DOT  AS(D)         AS(S)         AS(T)         AS(N)          AS(B)       &kp LGUI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LCTRL      AS(J)   &mt FR_COLON FR_SEMI &mt FR_QMARK FR_COMMA AS(K) &mt FR_TILDE FR_FSLH AS(FR_W)   AS(F)         AS(L)         AS(P)          AS(V)       &kp LALT
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                      &kp DEL   &lt MEDIA BSPC &lt SHORT SPACE      &kp RET       &mo NAV       &kp F12
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(media,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &bootloader        ___       &kp K_PREV    &kp K_PP      &kp K_NEXT  &ext_power EP_TOG      ___        &kp FR_N7     &kp FR_N8     &kp FR_N9    &kp FR_MINUS  &bootloader
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &sys_reset         ___      &kp K_VOL_DN   &kp K_MUTE  &kp K_VOL_UP  &ext_power EP_ON       ___        &kp FR_N4     &kp FR_N5     &kp FR_N6     &kp PLUS      &sys_reset
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &bt BT_CLR         ___      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &ext_power EP_OFF   &kp FR_DOT    &kp FR_N1     &kp FR_N2     &kp FR_N3     &kp FR_N0       ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                        ___           ___           ___               ___           ___           ___   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

  ZMK_LAYER(shortcut,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              ___        &kp LA(F4)    &kp LS(F3)     &kp F3          &kp F2        ___          &kp FR_PRCNT &mt FR_LT FR_LPAR &mt PLUS EQUAL &mt FR_GT FR_RPAR &mt FR_PIPE FR_BSLH ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___       &kp LC(FR_A)   &kp LC(S)  &kp FR_E_ACCENT   &kp LC(F)       ___         &mt FR_DIAE FR_CARET &mt FR_LBRC FR_LBKT &mt FR_UNDER FR_MINUS &mt FR_RBRC FR_RBKT &mt FR_DQT FR_SQT ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___       &kp LC(FR_Z)   &kp LC(X)     &kp LC(C)      &kp LC(V)       ___           &kp FR_CCED  &mt FR_EXCL FR_HASH &mt FR_AT FR_STAR &mt FR_DLLR FR_AMPS ___ ___
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                        ___           ___           ___            &kp LA(F2)       ___           ___   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

 
 ZMK_LAYER(navigation,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              ___            ___          &kp F7       &kp F8        &kp F9       &kp F10             ___         &kp HOME     &kp PG_DN     &kp PG_UP      &kp END         ___   
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___            ___     &hml LCTRL F4 &hml LSHFT F5  &hml LALT F6    &kp F11             ___         &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT        ___   
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___            ___          &kp F1       &kp F2        &kp F3       &kp F12             ___         &kp TAB         ___           ___           ___           ___   
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                        ___           ___           ___               ___           ___           ___   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
