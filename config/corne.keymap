/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "keys_fr.h"
#include "../zmk-nodefree-config/helper.h"

&nice_view_spi {
    cs-gpios = <&pro_micro 9 GPIO_ACTIVE_HIGH>;
};

/* use helper macros to define left and right hand keys */
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"                // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <175>; \
        global-quick-tap-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

#define MAKE_MSHFT(NAME, TAP, STAP) \
     ZMK_BEHAVIOR(NAME, mod_morph, \
               bindings = <&kp TAP>, <&kp STAP>; \
               mods = <(MOD_LSFT|MOD_RSFT)>; \
     )

#define DEFAULT    0
#define MEDIA      1 
#define SHORT      2
#define NAV        3
#define AZERTY     4
#define AZERTY_NUM 5

#undef COMBO_HOOK
#define COMBO_HOOK global-quick-tap-ms = <150>;
#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

/*                KEY POSITIONS

  ╭─────────────────────────╮ ╭─────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯ */

#define ZMK_SIMPLE_MACRO(name, keys) \
/ { \
    macros { \
        macro_ ## name: name { \
            label = ZMK_HELPER_STRINGIFY(name); \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            bindings \
                = <&macro_tap keys> \
                ; \
        }; \
    }; \
}; \

ZMK_SIMPLE_MACRO(egrave, &kp FR_GRAVE &kp E)
ZMK_SIMPLE_MACRO(ecaret, &kp FR_CARET &kp E)
ZMK_SIMPLE_MACRO(ugrave, &kp FR_GRAVE &kp U)
ZMK_SIMPLE_MACRO(ucaret, &kp FR_CARET &kp U)
ZMK_SIMPLE_MACRO(agrave, &kp FR_GRAVE &kp FR_A)

ZMK_COMBO(agrave , &macro_agrave     ,    LM0 LM1,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(eaccent, &kp FR_E_ACCENT   ,    LM1 LM2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(egrave , &macro_egrave     ,    LM2 LM3,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(ecaret , &macro_ecaret     ,    LM2 LT2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(ugrave , &macro_ugrave     ,    LT1 LT2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(ucaret , &macro_ucaret     ,    LT0 LT1,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(copy   , &kp LC(C)         ,    LB2 LB3,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(cut    , &kp LC(X)         ,    LB1 LB3,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(paste  , &kp LC(V)         ,    LB1 LB2,     DEFAULT, COMBO_TERM_FAST)

// right-hand combos
ZMK_COMBO(cced   , &kp FR_CCED       ,    RT1 RT2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(minus  , &kp FR_MINUS      ,    RM1 RM2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(under  , &kp FR_UNDER      ,    RM2 RM3,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(squote , &kp FR_SQT        ,    RB1 RB2,     DEFAULT, COMBO_TERM_FAST)
ZMK_COMBO(dquote , &kp FR_DQT        ,    RB2 RB3,     DEFAULT, COMBO_TERM_FAST)

#define ___ &trans

MAKE_MSHFT(dot_grave, FR_DOT, FR_GRAVE)
MAKE_MSHFT(semi_colon, FR_SEMI, FR_COLON)
MAKE_MSHFT(comma_qmark, FR_COMMA, FR_QMARK)
MAKE_MSHFT(fslh_tilde, FR_FSLH, FR_TILDE)

ZMK_LAYER(default,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
            &kp TAB      &kp FR_Q        &kp H         &kp O        &kp U          &kp X             &kp G         &kp C         &kp FR_M      &kp R         &kp FR_Z     &kp ESC
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LSHFT    &hml LGUI Y   &hml LCTRL I  &hml LSHFT E &hml LALT FR_A  &dot_grave          &kp D      &hmr LALT S   &hmr RSHFT T  &hmr RCTRL N  &hmr RGUI B     &kp LGUI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LCTRL      &kp J       &semi_colon   &comma_qmark     &kp K      &fslh_tilde         &kp FR_W       &kp F         &kp L         &kp P          &kp V       &kp LALT
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                      &kp DEL   &lt MEDIA BSPC &lt SHORT SPACE   &mt LSHFT RET  &lt NAV TAB     &kp ESC 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(media,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              ___          ___         &kp K_PREV    &kp K_PP      &kp K_NEXT   &bootloader       &bootloader    &kp FR_N7     &kp FR_N8     &kp FR_N9    &kp FR_MINUS     ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___  &kp LGUI &hml LCTRL K_VOL_DN &hml LSHFT K_MUTE &hml LALT K_VOL_UP &sys_reset    &sys_reset    &kp FR_N4     &kp FR_N5     &kp FR_N6     &kp PLUS        ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &bt BT_CLR       ___        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &ext_power EP_OFF      ___        &kp FR_N1     &kp FR_N2     &kp FR_N3         ___         ___
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                        ___           ___           ___               ___        &kp FR_N0    &kp FR_DOT   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

MAKE_MSHFT(lpar_lt, FR_LPAR, FR_LT)
MAKE_MSHFT(equal_plus, EQUAL, PLUS)
MAKE_MSHFT(rpar_gt, FR_RPAR, FR_GT)
MAKE_MSHFT(bslh_pipe, FR_BSLH, FR_PIPE)

MAKE_MSHFT(caret_diae, FR_CARET, FR_DIAE)
MAKE_MSHFT(lbkt_lbrc, FR_LBKT, FR_LBRC)
MAKE_MSHFT(minus_under, FR_MINUS, FR_UNDER)
MAKE_MSHFT(rbkt_rbrc, FR_RBKT, FR_RBRC)
MAKE_MSHFT(sqt_dqt, FR_SQT, FR_DQT)

MAKE_MSHFT(hash_excl, FR_HASH, FR_EXCL)
MAKE_MSHFT(star_at, FR_STAR, FR_AT)
MAKE_MSHFT(amps_dllr, FR_AMPS, FR_DLLR)

  ZMK_LAYER(shortcut,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              ___        &kp LA(F4)    &kp LS(F3)     &kp F3          &kp F2        ___          &kp FR_PRCNT     &lpar_lt    &equal_plus     &rpar_gt    &bslh_pipe       ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___       &kp LC(FR_A)   &kp LC(S)  &kp FR_E_ACCENT   &kp LC(F)       ___           &caret_diae    &lbkt_lbrc  &minus_under    &rbkt_rbrc     &sqt_dqt       ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___       &kp LC(FR_Z)   &kp LC(X)     &kp LC(C)      &kp LC(V)       ___           &kp FR_CCED    &hash_excl     &star_at     &amps_dllr       ___          ___
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                        ___           ___           ___             &kp LSFT     &kp LA(F2)     &kp F12   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

 
 ZMK_LAYER(navigation,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
              ___            ___          &kp F7       &kp F8        &kp F9       &kp F10             ___         &kp HOME     &kp PG_DN     &kp PG_UP      &kp END     &to AZERTY   
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___         &kp LGUI   &hml LCTRL F4 &hml LSHFT F5  &hml LALT F6    &kp F11             ___         &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT        ___   
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
              ___            ___          &kp F1       &kp F2        &kp F3       &kp F12             ___         &kp TAB         ___           ___           ___           ___   
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                        ___           ___         &kp TAB             ___           ___           ___   
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(azerty,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
            &kp TAB      &kp FR_A      &kp FR_Z        &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P      &to DEFAULT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LSHFT     &kp FR_Q        &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L       &kp FR_M      &kp LGUI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LCTRL      &kp FR_W       &kp X         &kp C         &kp V         &kp B             &kp N     &kp FR_COMMA   &kp FR_SEMI  &kp FR_COLON   &kp FR_EXCL    &kp LALT
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                      &kp LALT   &lt AZERTY_NUM BSPC &lt SHORT SPACE &mt LSHFT RET &mo NAV      &kp ESC 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(azerty_numbers,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
            &kp TAB        &kp N1        &kp N2       &kp N3        &kp N4        &kp N5             &kp N6         &kp N7       &kp N8         &kp N9       &kp N0      &to DEFAULT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LSHFT     &kp FR_Q        &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L       &kp FR_M      &kp LGUI
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp LCTRL      &kp FR_W       &kp X         &kp C         &kp V         &kp B             &kp N     &kp FR_COMMA   &kp FR_SEMI  &kp FR_COLON   &kp FR_EXCL    &kp LALT
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                      &kp DEL   &lt MEDIA BSPC &lt NAV SPACE   &mt LSHFT RET    &mo NAV       &kp ESC 
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)